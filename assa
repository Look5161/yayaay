

local StrToNumber=tonumber;local Byte=string.byte;local Char=string.char;local Sub=string.sub;local Subg=string.gsub;local Rep=string.rep;local Concat=table.concat;local Insert=table.insert;local LDExp=math.ldexp;local GetFEnv=getfenv or function() return _ENV;end ;local Setmetatable=setmetatable;local PCall=pcall;local Select=select;local Unpack=unpack or table.unpack ;local ToNumber=tonumber;local function VMCall(ByteString,vmenv,...) local DIP=1;local repeatNext;ByteString=Subg(Sub(ByteString,5),"..",function(byte) if (Byte(byte,2)==79) then local FlatIdent_95CAC=0;while true do if (FlatIdent_95CAC==0) then repeatNext=StrToNumber(Sub(byte,1,1));return "";end end else local a=Char(StrToNumber(byte,16));if repeatNext then local b=Rep(a,repeatNext);repeatNext=nil;return b;else return a;end end end);local function gBit(Bit,Start,End) if End then local Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1)) ;return Res-(Res%1) ;else local FlatIdent_87F0A=0;local Plc;while true do if (FlatIdent_87F0A==0) then Plc=2^(Start-1) ;return (((Bit%(Plc + Plc))>=Plc) and 1) or 0 ;end end end end local function gBits8() local a=Byte(ByteString,DIP,DIP);DIP=DIP + 1 ;return a;end local function gBits16() local a,b=Byte(ByteString,DIP,DIP + 2 );DIP=DIP + 2 ;return (b * 256) + a ;end local function gBits32() local FlatIdent_1D0A6=0;local a;local b;local c;local d;while true do if (FlatIdent_1D0A6==1) then return (d * 16777216) + (c * 65536) + (b * 256) + a ;end if (FlatIdent_1D0A6==0) then a,b,c,d=Byte(ByteString,DIP,DIP + 3 );DIP=DIP + 4 ;FlatIdent_1D0A6=1;end end end local function gFloat() local FlatIdent_76979=0;local Left;local Right;local IsNormal;local Mantissa;local Exponent;local Sign;while true do if (FlatIdent_76979==0) then Left=gBits32();Right=gBits32();FlatIdent_76979=1;end if (FlatIdent_76979==3) then if (Exponent==0) then if (Mantissa==0) then return Sign * 0 ;else Exponent=1;IsNormal=0;end elseif (Exponent==2047) then return ((Mantissa==0) and (Sign * (1/0))) or (Sign * NaN) ;end return LDExp(Sign,Exponent-1023 ) * (IsNormal + (Mantissa/(2^52))) ;end if (FlatIdent_76979==2) then Exponent=gBit(Right,21,31);Sign=((gBit(Right,32)==1) and  -1) or 1 ;FlatIdent_76979=3;end if (FlatIdent_76979==1) then IsNormal=1;Mantissa=(gBit(Right,1,20) * (2^32)) + Left ;FlatIdent_76979=2;end end end local function gString(Len) local FlatIdent_2FBEB=0;local Str;local FStr;while true do if (FlatIdent_2FBEB==3) then return Concat(FStr);end if (FlatIdent_2FBEB==2) then FStr={};for Idx=1, #Str do FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end FlatIdent_2FBEB=3;end if (FlatIdent_2FBEB==0) then Str=nil;if  not Len then Len=gBits32();if (Len==0) then return "";end end FlatIdent_2FBEB=1;end if (FlatIdent_2FBEB==1) then Str=Sub(ByteString,DIP,(DIP + Len) -1 );DIP=DIP + Len ;FlatIdent_2FBEB=2;end end end local gInt=gBits32;local function _R(...) return {...},Select("#",...);end local function Deserialize() local FlatIdent_60EA1=0;local Instrs;local Functions;local Lines;local Chunk;local ConstCount;local Consts;while true do if (FlatIdent_60EA1==2) then for Idx=1,gBits32() do local Descriptor=gBits8();if (gBit(Descriptor,1,1)==0) then local FlatIdent_31905=0;local Type;local Mask;local Inst;while true do if (FlatIdent_31905==1) then Inst={gBits16(),gBits16(),nil,nil};if (Type==0) then Inst[3]=gBits16();Inst[4]=gBits16();elseif (Type==1) then Inst[3]=gBits32();elseif (Type==2) then Inst[3]=gBits32() -(2^16) ;elseif (Type==3) then local FlatIdent_A9A3=0;while true do if (FlatIdent_A9A3==0) then Inst[3]=gBits32() -(2^16) ;Inst[4]=gBits16();break;end end end FlatIdent_31905=2;end if (0==FlatIdent_31905) then Type=gBit(Descriptor,2,3);Mask=gBit(Descriptor,4,6);FlatIdent_31905=1;end if (FlatIdent_31905==2) then if (gBit(Mask,1,1)==1) then Inst[2]=Consts[Inst[2]];end if (gBit(Mask,2,2)==1) then Inst[3]=Consts[Inst[3]];end FlatIdent_31905=3;end if (FlatIdent_31905==3) then if (gBit(Mask,3,3)==1) then Inst[4]=Consts[Inst[4]];end Instrs[Idx]=Inst;break;end end end end for Idx=1,gBits32() do Functions[Idx-1 ]=Deserialize();end return Chunk;end if (FlatIdent_60EA1==0) then Instrs={};Functions={};Lines={};Chunk={Instrs,Functions,nil,Lines};FlatIdent_60EA1=1;end if (1==FlatIdent_60EA1) then ConstCount=gBits32();Consts={};for Idx=1,ConstCount do local Type=gBits8();local Cons;if (Type==1) then Cons=gBits8()~=0 ;elseif (Type==2) then Cons=gFloat();elseif (Type==3) then Cons=gString();end Consts[Idx]=Cons;end Chunk[3]=gBits8();FlatIdent_60EA1=2;end end end local function Wrap(Chunk,Upvalues,Env) local Instr=Chunk[1];local Proto=Chunk[2];local Params=Chunk[3];return function(...) local Instr=Instr;local Proto=Proto;local Params=Params;local _R=_R;local VIP=1;local Top= -1;local Vararg={};local Args={...};local PCount=Select("#",...) -1 ;local Lupvals={};local Stk={};for Idx=0,PCount do if (Idx>=Params) then Vararg[Idx-Params ]=Args[Idx + 1 ];else Stk[Idx]=Args[Idx + 1 ];end end local Varargsz=(PCount-Params) + 1 ;local Inst;local Enum;while true do local FlatIdent_5062=0;while true do if (FlatIdent_5062==1) then if (Enum<=67) then if (Enum<=33) then if (Enum<=16) then if (Enum<=7) then if (Enum<=3) then if (Enum<=1) then if (Enum==0) then local FlatIdent_87DF2=0;local Edx;local Results;local Limit;local A;while true do if (0==FlatIdent_87DF2) then Edx=nil;Results,Limit=nil;A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87DF2=1;end if (FlatIdent_87DF2==2) then Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -1 ;FlatIdent_87DF2=3;end if (FlatIdent_87DF2==1) then Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87DF2=2;end if (FlatIdent_87DF2==3) then Edx=0;for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));FlatIdent_87DF2=4;end if (FlatIdent_87DF2==5) then VIP=VIP + 1 ;Inst=Instr[VIP];do return Stk[Inst[2]];end VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];break;end if (FlatIdent_87DF2==4) then VIP=VIP + 1 ;Inst=Instr[VIP];Upvalues[Inst[3]]=Stk[Inst[2]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];FlatIdent_87DF2=5;end end else local FlatIdent_40CF=0;local B;local T;local A;while true do if (FlatIdent_40CF==5) then B=Inst[3];for Idx=1,B do T[Idx]=Stk[A + Idx ];end break;end if (FlatIdent_40CF==2) then Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_40CF=3;end if (FlatIdent_40CF==0) then B=nil;T=nil;A=nil;Stk[Inst[2]]={};FlatIdent_40CF=1;end if (FlatIdent_40CF==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_40CF=2;end if (FlatIdent_40CF==3) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];FlatIdent_40CF=4;end if (FlatIdent_40CF==4) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];T=Stk[A];FlatIdent_40CF=5;end end end elseif (Enum>2) then Stk[Inst[2]]=Env[Inst[3]];else local FlatIdent_25DF3=0;local A;while true do if (FlatIdent_25DF3==0) then A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_25DF3=1;end if (FlatIdent_25DF3==4) then VIP=VIP + 1 ;Inst=Instr[VIP];if (Stk[Inst[2]]==Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end break;end if (FlatIdent_25DF3==2) then Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_25DF3=3;end if (FlatIdent_25DF3==1) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_25DF3=2;end if (FlatIdent_25DF3==3) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));FlatIdent_25DF3=4;end end end elseif (Enum<=5) then if (Enum>4) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];else Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];end elseif (Enum==6) then if (Inst[2]<Inst[4]) then VIP=Inst[3];else VIP=VIP + 1 ;end else local Edx;local Results;local A;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1 ,Inst[3]))};Edx=0;for Idx=A,Inst[4] do local FlatIdent_67029=0;while true do if (FlatIdent_67029==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Upvalues[Inst[3]]=Stk[Inst[2]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];end elseif (Enum<=11) then if (Enum<=9) then if (Enum==8) then local FlatIdent_2095C=0;while true do if (FlatIdent_2095C==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;FlatIdent_2095C=2;end if (FlatIdent_2095C==4) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];break;end if (FlatIdent_2095C==3) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];FlatIdent_2095C=4;end if (FlatIdent_2095C==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_2095C=3;end if (FlatIdent_2095C==0) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];FlatIdent_2095C=1;end end else local FlatIdent_494DF=0;while true do if (FlatIdent_494DF==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;FlatIdent_494DF=2;end if (FlatIdent_494DF==3) then VIP=Inst[3];break;end if (FlatIdent_494DF==0) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];FlatIdent_494DF=1;end if (FlatIdent_494DF==2) then Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_494DF=3;end end end elseif (Enum>10) then local FlatIdent_8D1A5=0;while true do if (FlatIdent_8D1A5==0) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];FlatIdent_8D1A5=1;end if (FlatIdent_8D1A5==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;FlatIdent_8D1A5=2;end if (4==FlatIdent_8D1A5) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];break;end if (3==FlatIdent_8D1A5) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;FlatIdent_8D1A5=4;end if (FlatIdent_8D1A5==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_8D1A5=3;end end else Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end elseif (Enum<=13) then if (Enum>12) then local FlatIdent_5575=0;local B;local K;while true do if (FlatIdent_5575==0) then B=Inst[3];K=Stk[B];FlatIdent_5575=1;end if (1==FlatIdent_5575) then for Idx=B + 1 ,Inst[4] do K=K   .. Stk[Idx] ;end Stk[Inst[2]]=K;break;end end else do return Stk[Inst[2]]();end end elseif (Enum<=14) then Stk[Inst[2]]=Inst[3]^Stk[Inst[4]] ;elseif (Enum>15) then if (Stk[Inst[2]]~=Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local A=Inst[2];local T=Stk[A];for Idx=A + 1 ,Top do Insert(T,Stk[Idx]);end end elseif (Enum<=24) then if (Enum<=20) then if (Enum<=18) then if (Enum>17) then local FlatIdent_28F3E=0;local A;while true do if (FlatIdent_28F3E==1) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];FlatIdent_28F3E=2;end if (FlatIdent_28F3E==3) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_28F3E=4;end if (0==FlatIdent_28F3E) then A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_28F3E=1;end if (FlatIdent_28F3E==4) then Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_28F3E=5;end if (FlatIdent_28F3E==5) then Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Upvalues[Inst[3]]=Stk[Inst[2]];FlatIdent_28F3E=6;end if (FlatIdent_28F3E==2) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));FlatIdent_28F3E=3;end if (FlatIdent_28F3E==6) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];break;end end elseif (Inst[2]==Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum>19) then local FlatIdent_93540=0;local A;while true do if (FlatIdent_93540==0) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));break;end end else local B;local T;local A;Stk[Inst[2]]={};VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A]();VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A]();VIP=VIP + 1 ;Inst=Instr[VIP];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];T=Stk[A];B=Inst[3];for Idx=1,B do T[Idx]=Stk[A + Idx ];end end elseif (Enum<=22) then if (Enum>21) then local FlatIdent_37906=0;while true do if (FlatIdent_37906==2) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_37906=3;end if (FlatIdent_37906==4) then Stk[Inst[2]]=Inst[3];break;end if (FlatIdent_37906==1) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_37906=2;end if (FlatIdent_37906==0) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_37906=1;end if (FlatIdent_37906==3) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_37906=4;end end else Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];end elseif (Enum>23) then local FlatIdent_8B336=0;while true do if (FlatIdent_8B336==0) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];FlatIdent_8B336=1;end if (FlatIdent_8B336==3) then do return Stk[Inst[2]];end VIP=VIP + 1 ;Inst=Instr[VIP];do return;end break;end if (FlatIdent_8B336==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;FlatIdent_8B336=2;end if (2==FlatIdent_8B336) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_8B336=3;end end else Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];end elseif (Enum<=28) then if (Enum<=26) then if (Enum>25) then local A=Inst[2];local Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Top)));Top=(Limit + A) -1 ;local Edx=0;for Idx=A,Top do local FlatIdent_6225E=0;while true do if (FlatIdent_6225E==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end else local FlatIdent_13AEB=0;local Step;local Index;local A;while true do if (FlatIdent_13AEB==6) then Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_13AEB=7;end if (FlatIdent_13AEB==7) then Inst=Instr[VIP];A=Inst[2];Index=Stk[A];FlatIdent_13AEB=8;end if (FlatIdent_13AEB==5) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_13AEB=6;end if (FlatIdent_13AEB==8) then Step=Stk[A + 2 ];if (Step>0) then if (Index>Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end elseif (Index<Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end break;end if (FlatIdent_13AEB==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_13AEB=3;end if (3==FlatIdent_13AEB) then Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_13AEB=4;end if (0==FlatIdent_13AEB) then Step=nil;Index=nil;A=nil;FlatIdent_13AEB=1;end if (FlatIdent_13AEB==4) then Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_13AEB=5;end if (FlatIdent_13AEB==1) then A=Inst[2];Stk[A]=Stk[A]();VIP=VIP + 1 ;FlatIdent_13AEB=2;end end end elseif (Enum>27) then local FlatIdent_7E46E=0;while true do if (FlatIdent_7E46E==0) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_7E46E=1;end if (1==FlatIdent_7E46E) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_7E46E=2;end if (FlatIdent_7E46E==3) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_7E46E=4;end if (FlatIdent_7E46E==4) then Stk[Inst[2]]=Inst[3];break;end if (FlatIdent_7E46E==2) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_7E46E=3;end end elseif (Inst[2]<Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=30) then if (Enum>29) then local FlatIdent_21DDC=0;local A;while true do if (FlatIdent_21DDC==0) then A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Top));end break;end end else Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];if  not Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end end elseif (Enum<=31) then local A;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Inst[3]));end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];do return Unpack(Stk,A,Top);end VIP=VIP + 1 ;Inst=Instr[VIP];do return;end elseif (Enum>32) then Stk[Inst[2]]={};else local FlatIdent_FA88=0;local Edx;local Results;local Limit;local A;while true do if (FlatIdent_FA88==3) then Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];FlatIdent_FA88=4;end if (FlatIdent_FA88==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_FA88=2;end if (FlatIdent_FA88==0) then Edx=nil;Results,Limit=nil;A=nil;Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];FlatIdent_FA88=1;end if (FlatIdent_FA88==8) then VIP=Inst[3];break;end if (FlatIdent_FA88==7) then Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_FA88=8;end if (FlatIdent_FA88==5) then Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do local FlatIdent_4223E=0;while true do if (FlatIdent_4223E==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;FlatIdent_FA88=6;end if (FlatIdent_FA88==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_FA88=3;end if (FlatIdent_FA88==4) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));FlatIdent_FA88=5;end if (6==FlatIdent_FA88) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));VIP=VIP + 1 ;FlatIdent_FA88=7;end end end elseif (Enum<=50) then if (Enum<=41) then if (Enum<=37) then if (Enum<=35) then if (Enum==34) then local FlatIdent_571C4=0;while true do if (FlatIdent_571C4==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_571C4=3;end if (FlatIdent_571C4==0) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];FlatIdent_571C4=1;end if (FlatIdent_571C4==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;FlatIdent_571C4=2;end if (FlatIdent_571C4==3) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];break;end end else local Edx;local Results,Limit;local A;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do local FlatIdent_5C6C4=0;while true do if (FlatIdent_5C6C4==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];if Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end end elseif (Enum>36) then local FlatIdent_6AEED=0;while true do if (3==FlatIdent_6AEED) then VIP=Inst[3];break;end if (FlatIdent_6AEED==2) then Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_6AEED=3;end if (FlatIdent_6AEED==0) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];FlatIdent_6AEED=1;end if (FlatIdent_6AEED==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;FlatIdent_6AEED=2;end end else local FlatIdent_6426D=0;local Edx;local Results;local Limit;local A;while true do if (8==FlatIdent_6426D) then Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];break;end if (FlatIdent_6426D==7) then Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_6426D=8;end if (4==FlatIdent_6426D) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));FlatIdent_6426D=5;end if (FlatIdent_6426D==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_6426D=2;end if (FlatIdent_6426D==5) then Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do local FlatIdent_53124=0;while true do if (FlatIdent_53124==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;FlatIdent_6426D=6;end if (FlatIdent_6426D==6) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));VIP=VIP + 1 ;FlatIdent_6426D=7;end if (FlatIdent_6426D==0) then Edx=nil;Results,Limit=nil;A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];FlatIdent_6426D=1;end if (FlatIdent_6426D==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_6426D=3;end if (FlatIdent_6426D==3) then Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];FlatIdent_6426D=4;end end end elseif (Enum<=39) then if (Enum==38) then local Edx;local Results;local A;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1 ,Inst[3]))};Edx=0;for Idx=A,Inst[4] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Upvalues[Inst[3]]=Stk[Inst[2]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];else local FlatIdent_44603=0;while true do if (FlatIdent_44603==0) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];FlatIdent_44603=1;end if (1==FlatIdent_44603) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;FlatIdent_44603=2;end if (FlatIdent_44603==3) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];break;end if (2==FlatIdent_44603) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_44603=3;end end end elseif (Enum>40) then local A=Inst[2];local Step=Stk[A + 2 ];local Index=Stk[A] + Step ;Stk[A]=Index;if (Step>0) then if (Index<=Stk[A + 1 ]) then local FlatIdent_47F4B=0;while true do if (FlatIdent_47F4B==0) then VIP=Inst[3];Stk[A + 3 ]=Index;break;end end end elseif (Index>=Stk[A + 1 ]) then VIP=Inst[3];Stk[A + 3 ]=Index;end else local FlatIdent_5962D=0;while true do if (FlatIdent_5962D==4) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_5962D=5;end if (FlatIdent_5962D==0) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_5962D=1;end if (FlatIdent_5962D==5) then VIP=Inst[3];break;end if (FlatIdent_5962D==2) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_5962D=3;end if (FlatIdent_5962D==1) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_5962D=2;end if (FlatIdent_5962D==3) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_5962D=4;end end end elseif (Enum<=45) then if (Enum<=43) then if (Enum==42) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];else local Results;local Edx;local Results,Limit;local A;Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Top)));Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1 ,Top))};Edx=0;for Idx=A,Inst[4] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];end elseif (Enum==44) then local A;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];if (Stk[Inst[2]]==Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local FlatIdent_4E551=0;local Results;local Edx;local Limit;local A;while true do if (FlatIdent_4E551==1) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_4E551=2;end if (FlatIdent_4E551==4) then Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do local FlatIdent_5B644=0;while true do if (FlatIdent_5B644==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];FlatIdent_4E551=5;end if (FlatIdent_4E551==8) then Stk[Inst[2]]=Inst[3];break;end if (3==FlatIdent_4E551) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));FlatIdent_4E551=4;end if (FlatIdent_4E551==0) then Results=nil;Edx=nil;Results,Limit=nil;A=nil;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_4E551=1;end if (5==FlatIdent_4E551) then Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Top)));Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do local FlatIdent_2595D=0;while true do if (FlatIdent_2595D==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4E551=6;end if (FlatIdent_4E551==7) then Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4E551=8;end if (FlatIdent_4E551==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;FlatIdent_4E551=3;end if (FlatIdent_4E551==6) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1 ,Top))};Edx=0;for Idx=A,Inst[4] do local FlatIdent_527C6=0;while true do if (FlatIdent_527C6==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4E551=7;end end end elseif (Enum<=47) then if (Enum==46) then Stk[Inst[2]]=Stk[Inst[3]]%Stk[Inst[4]] ;else Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;end elseif (Enum<=48) then Stk[Inst[2]]= #Stk[Inst[3]];elseif (Enum>49) then local A=Inst[2];local Results={Stk[A]()};local Limit=Inst[4];local Edx=0;for Idx=A,Limit do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end elseif (Stk[Inst[2]]==Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=58) then if (Enum<=54) then if (Enum<=52) then if (Enum==51) then local Step;local Index;local A;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Index=Stk[A];Step=Stk[A + 2 ];if (Step>0) then if (Index>Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end elseif (Index<Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end else local A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Inst[3]));end end elseif (Enum>53) then local FlatIdent_B1F4=0;local Step;local Index;local A;while true do if (FlatIdent_B1F4==3) then Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_B1F4=4;end if (FlatIdent_B1F4==6) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Index=Stk[A];FlatIdent_B1F4=7;end if (2==FlatIdent_B1F4) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_B1F4=3;end if (FlatIdent_B1F4==0) then Step=nil;Index=nil;A=nil;A=Inst[2];FlatIdent_B1F4=1;end if (7==FlatIdent_B1F4) then Step=Stk[A + 2 ];if (Step>0) then if (Index>Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end elseif (Index<Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end break;end if (FlatIdent_B1F4==4) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];FlatIdent_B1F4=5;end if (FlatIdent_B1F4==1) then Stk[A]=Stk[A]();VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];FlatIdent_B1F4=2;end if (FlatIdent_B1F4==5) then Stk[A]=Stk[A]();VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];FlatIdent_B1F4=6;end end elseif (Stk[Inst[2]]==Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=56) then if (Enum>55) then local Edx;local Results,Limit;local A;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Top)));Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do local FlatIdent_1E4CB=0;while true do if (FlatIdent_1E4CB==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];else Stk[Inst[2]]=Inst[3]^Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]]/Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3]^Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]]%Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]]%Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];do return Stk[Inst[2]];end VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];end elseif (Enum>57) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];do return Stk[Inst[2]];end VIP=VIP + 1 ;Inst=Instr[VIP];do return;end else local FlatIdent_1D701=0;local NewProto;local NewUvals;local Indexes;while true do if (FlatIdent_1D701==0) then NewProto=Proto[Inst[3]];NewUvals=nil;FlatIdent_1D701=1;end if (FlatIdent_1D701==2) then for Idx=1,Inst[4] do VIP=VIP + 1 ;local Mvm=Instr[VIP];if (Mvm[1]==125) then Indexes[Idx-1 ]={Stk,Mvm[3]};else Indexes[Idx-1 ]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + 1 ]=Indexes;end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);break;end if (1==FlatIdent_1D701) then Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key) local Val=Indexes[Key];return Val[1][Val[2]];end,__newindex=function(_,Key,Value) local FlatIdent_69785=0;local Val;while true do if (0==FlatIdent_69785) then Val=Indexes[Key];Val[1][Val[2]]=Value;break;end end end});FlatIdent_1D701=2;end end end elseif (Enum<=62) then if (Enum<=60) then if (Enum>59) then local FlatIdent_2BB2A=0;local B;while true do if (FlatIdent_2BB2A==0) then B=Stk[Inst[4]];if  not B then VIP=VIP + 1 ;else Stk[Inst[2]]=B;VIP=Inst[3];end break;end end else local FlatIdent_24439=0;local A;while true do if (FlatIdent_24439==2) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];FlatIdent_24439=3;end if (FlatIdent_24439==6) then Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_24439=7;end if (FlatIdent_24439==4) then Stk[A]=Stk[A]();VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_24439=5;end if (0==FlatIdent_24439) then A=nil;A=Inst[2];Stk[A]=Stk[A]();FlatIdent_24439=1;end if (FlatIdent_24439==5) then Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_24439=6;end if (FlatIdent_24439==7) then VIP=Inst[3];break;end if (FlatIdent_24439==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];FlatIdent_24439=2;end if (FlatIdent_24439==3) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];FlatIdent_24439=4;end end end elseif (Enum>61) then Stk[Inst[2]]();else Stk[Inst[2]]=Stk[Inst[3]]/Stk[Inst[4]] ;end elseif (Enum<=64) then if (Enum>63) then local FlatIdent_5D905=0;local A;while true do if (FlatIdent_5D905==1) then Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];FlatIdent_5D905=2;end if (FlatIdent_5D905==0) then A=nil;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_5D905=1;end if (3==FlatIdent_5D905) then Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_5D905=4;end if (FlatIdent_5D905==6) then VIP=VIP + 1 ;Inst=Instr[VIP];if (Stk[Inst[2]]==Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end break;end if (FlatIdent_5D905==5) then Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];FlatIdent_5D905=6;end if (FlatIdent_5D905==4) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_5D905=5;end if (FlatIdent_5D905==2) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_5D905=3;end end else local FlatIdent_20476=0;local A;local Cls;while true do if (FlatIdent_20476==1) then for Idx=1, #Lupvals do local List=Lupvals[Idx];for Idz=0, #List do local Upv=List[Idz];local NStk=Upv[1];local DIP=Upv[2];if ((NStk==Stk) and (DIP>=A)) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;end end end break;end if (FlatIdent_20476==0) then A=Inst[2];Cls={};FlatIdent_20476=1;end end end elseif (Enum<=65) then Stk[Inst[2]]=Stk[Inst[3]]/Inst[4] ;elseif (Enum==66) then Stk[Inst[2]]=Stk[Inst[3]]%Inst[4] ;else Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];end elseif (Enum<=101) then if (Enum<=84) then if (Enum<=75) then if (Enum<=71) then if (Enum<=69) then if (Enum==68) then local FlatIdent_98327=0;local A;local T;local B;while true do if (FlatIdent_98327==0) then A=Inst[2];T=Stk[A];FlatIdent_98327=1;end if (FlatIdent_98327==1) then B=Inst[3];for Idx=1,B do T[Idx]=Stk[A + Idx ];end break;end end else local VA;local A;Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Top=(A + Varargsz) -1 ;for Idx=A,Top do local FlatIdent_97FFD=0;while true do if (FlatIdent_97FFD==0) then VA=Vararg[Idx-A ];Stk[Idx]=VA;break;end end end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];end elseif (Enum>70) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];else local FlatIdent_35AC5=0;local Edx;local Results;local Limit;local VA;local A;while true do if (1==FlatIdent_35AC5) then Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];FlatIdent_35AC5=2;end if (2==FlatIdent_35AC5) then Top=(A + Varargsz) -1 ;for Idx=A,Top do VA=Vararg[Idx-A ];Stk[Idx]=VA;end VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_35AC5=3;end if (FlatIdent_35AC5==5) then do return Unpack(Stk,A,Top);end VIP=VIP + 1 ;Inst=Instr[VIP];do return;end break;end if (FlatIdent_35AC5==3) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Top)));Top=(Limit + A) -1 ;Edx=0;FlatIdent_35AC5=4;end if (FlatIdent_35AC5==4) then for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];FlatIdent_35AC5=5;end if (FlatIdent_35AC5==0) then Edx=nil;Results,Limit=nil;VA=nil;A=nil;FlatIdent_35AC5=1;end end end elseif (Enum<=73) then if (Enum==72) then local A=Inst[2];local Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -1 ;local Edx=0;for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end else local FlatIdent_38BFA=0;local A;while true do if (FlatIdent_38BFA==0) then A=Inst[2];do return Unpack(Stk,A,Top);end break;end end end elseif (Enum>74) then if (Inst[2]==Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local A=Inst[2];local Index=Stk[A];local Step=Stk[A + 2 ];if (Step>0) then if (Index>Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end elseif (Index<Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end end elseif (Enum<=79) then if (Enum<=77) then if (Enum>76) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end else VIP=Inst[3];end elseif (Enum==78) then if (Stk[Inst[2]]>Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local FlatIdent_5BCFC=0;local A;local Results;local Edx;while true do if (FlatIdent_5BCFC==1) then Edx=0;for Idx=A,Inst[4] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end break;end if (0==FlatIdent_5BCFC) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1 ,Inst[3]))};FlatIdent_5BCFC=1;end end end elseif (Enum<=81) then if (Enum==80) then if (Stk[Inst[2]]~=Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local FlatIdent_60BB=0;local A;while true do if (FlatIdent_60BB==1) then for Idx=A,Top do local FlatIdent_2F289=0;local VA;while true do if (0==FlatIdent_2F289) then VA=Vararg[Idx-A ];Stk[Idx]=VA;break;end end end break;end if (FlatIdent_60BB==0) then A=Inst[2];Top=(A + Varargsz) -1 ;FlatIdent_60BB=1;end end end elseif (Enum<=82) then local Step;local Index;local A;Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A]();VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Index=Stk[A];Step=Stk[A + 2 ];if (Step>0) then if (Index>Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end elseif (Index<Stk[A + 1 ]) then VIP=Inst[3];else Stk[A + 3 ]=Index;end elseif (Enum>83) then local A;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];if (Stk[Inst[2]]~=Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end else Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];end elseif (Enum<=92) then if (Enum<=88) then if (Enum<=86) then if (Enum==85) then local FlatIdent_8BE54=0;while true do if (1==FlatIdent_8BE54) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_8BE54=2;end if (0==FlatIdent_8BE54) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];FlatIdent_8BE54=1;end if (FlatIdent_8BE54==3) then VIP=Inst[3];break;end if (FlatIdent_8BE54==2) then Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_8BE54=3;end end elseif (Inst[2]<Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum>87) then local FlatIdent_4D11E=0;while true do if (FlatIdent_4D11E==7) then Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=8;end if (FlatIdent_4D11E==4) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=5;end if (1==FlatIdent_4D11E) then Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=2;end if (0==FlatIdent_4D11E) then Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=1;end if (FlatIdent_4D11E==5) then Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=6;end if (FlatIdent_4D11E==8) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=9;end if (FlatIdent_4D11E==6) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=7;end if (FlatIdent_4D11E==9) then Stk[Inst[2]]=Env[Inst[3]];break;end if (FlatIdent_4D11E==2) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=3;end if (FlatIdent_4D11E==3) then Stk[Inst[2]]=Env[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4D11E=4;end end else Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]={};VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];end elseif (Enum<=90) then if (Enum>89) then Stk[Inst[2]]=Inst[3]/Inst[4] ;else local A;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A]();VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];do return Stk[Inst[2]];end VIP=VIP + 1 ;Inst=Instr[VIP];do return;end end elseif (Enum==91) then local FlatIdent_87441=0;while true do if (FlatIdent_87441==7) then do return;end break;end if (FlatIdent_87441==1) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87441=2;end if (FlatIdent_87441==4) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87441=5;end if (FlatIdent_87441==6) then do return Stk[Inst[2]];end VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87441=7;end if (FlatIdent_87441==3) then Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87441=4;end if (0==FlatIdent_87441) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87441=1;end if (FlatIdent_87441==5) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87441=6;end if (FlatIdent_87441==2) then Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_87441=3;end end else local A;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Inst[3]));end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];do return Unpack(Stk,A,Top);end VIP=VIP + 1 ;Inst=Instr[VIP];do return;end end elseif (Enum<=96) then if (Enum<=94) then if (Enum>93) then Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);else Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[4]] ;end elseif (Enum>95) then local FlatIdent_47A85=0;local VA;local A;while true do if (FlatIdent_47A85==5) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Top));end VIP=VIP + 1 ;FlatIdent_47A85=6;end if (FlatIdent_47A85==0) then VA=nil;A=nil;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_47A85=1;end if (FlatIdent_47A85==3) then Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));FlatIdent_47A85=4;end if (FlatIdent_47A85==4) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Top=(A + Varargsz) -1 ;for Idx=A,Top do VA=Vararg[Idx-A ];Stk[Idx]=VA;end FlatIdent_47A85=5;end if (FlatIdent_47A85==2) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]={};VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_47A85=3;end if (FlatIdent_47A85==7) then do return;end break;end if (FlatIdent_47A85==6) then Inst=Instr[VIP];A=Inst[2];do return Unpack(Stk,A,Top);end VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_47A85=7;end if (FlatIdent_47A85==1) then Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A]();FlatIdent_47A85=2;end end elseif Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=98) then if (Enum==97) then Stk[Inst[2]]=Stk[Inst[3]] * Stk[Inst[4]] ;else local FlatIdent_15C08=0;local A;while true do if (1==FlatIdent_15C08) then Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];FlatIdent_15C08=2;end if (FlatIdent_15C08==5) then Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];break;end if (2==FlatIdent_15C08) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_15C08=3;end if (FlatIdent_15C08==0) then A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_15C08=1;end if (FlatIdent_15C08==4) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] * Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_15C08=5;end if (FlatIdent_15C08==3) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;FlatIdent_15C08=4;end end end elseif (Enum<=99) then if (Stk[Inst[2]]<=Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum==100) then local FlatIdent_677DA=0;local A;local Results;local Edx;while true do if (FlatIdent_677DA==0) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1 ,Top))};FlatIdent_677DA=1;end if (FlatIdent_677DA==1) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_98E39=0;while true do if (0==FlatIdent_98E39) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end break;end end else local FlatIdent_83DF4=0;local A;while true do if (3==FlatIdent_83DF4) then VIP=VIP + 1 ;Inst=Instr[VIP];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end VIP=VIP + 1 ;FlatIdent_83DF4=4;end if (FlatIdent_83DF4==2) then Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];FlatIdent_83DF4=3;end if (FlatIdent_83DF4==1) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];FlatIdent_83DF4=2;end if (4==FlatIdent_83DF4) then Inst=Instr[VIP];Upvalues[Inst[3]]=Stk[Inst[2]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_83DF4=5;end if (FlatIdent_83DF4==5) then Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];break;end if (FlatIdent_83DF4==0) then A=nil;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_83DF4=1;end end end elseif (Enum<=118) then if (Enum<=109) then if (Enum<=105) then if (Enum<=103) then if (Enum>102) then Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;else Stk[Inst[2]]=Inst[3];end elseif (Enum>104) then if  not Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end else Stk[Inst[2]]=Inst[3]~=0 ;end elseif (Enum<=107) then if (Enum==106) then local A;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];if (Stk[Inst[2]]==Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Inst[2]<=Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum==108) then local DIP;local NStk;local Upv;local List;local Cls;local Edx;local Limit;local Results;local A;A=Inst[2];Results={Stk[A]()};Limit=Inst[4];Edx=0;for Idx=A,Limit do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];Upvalues[Inst[3]]=Stk[Inst[2]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Cls={};for Idx=1, #Lupvals do local FlatIdent_8E3FD=0;while true do if (FlatIdent_8E3FD==0) then List=Lupvals[Idx];for Idz=0, #List do Upv=List[Idz];NStk=Upv[1];DIP=Upv[2];if ((NStk==Stk) and (DIP>=A)) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;end end break;end end end else Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;end elseif (Enum<=113) then if (Enum<=111) then if (Enum>110) then Stk[Inst[2]]=Stk[Inst[3]] * Inst[4] ;else Stk[Inst[2]]=Upvalues[Inst[3]];end elseif (Enum>112) then local A=Inst[2];Stk[A]=Stk[A]();else local A=Inst[2];do return Unpack(Stk,A,A + Inst[3] );end end elseif (Enum<=115) then if (Enum>114) then local FlatIdent_D07E=0;local A;while true do if (FlatIdent_D07E==4) then Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_D07E=5;end if (FlatIdent_D07E==1) then Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_D07E=2;end if (FlatIdent_D07E==0) then A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_D07E=1;end if (FlatIdent_D07E==7) then do return Unpack(Stk,A,Top);end VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_D07E=8;end if (FlatIdent_D07E==6) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];FlatIdent_D07E=7;end if (5==FlatIdent_D07E) then Inst=Instr[VIP];A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Inst[3]));end FlatIdent_D07E=6;end if (FlatIdent_D07E==8) then do return;end break;end if (FlatIdent_D07E==3) then Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_D07E=4;end if (2==FlatIdent_D07E) then Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_D07E=3;end end else local FlatIdent_706CB=0;while true do if (FlatIdent_706CB==0) then Stk[Inst[2]]=Inst[3]~=0 ;VIP=VIP + 1 ;break;end end end elseif (Enum<=116) then if (Stk[Inst[2]]<=Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum==117) then local A=Inst[2];local T=Stk[A];for Idx=A + 1 ,Inst[3] do Insert(T,Stk[Idx]);end else local FlatIdent_950AF=0;local DIP;local NStk;local Upv;local List;local Cls;local VA;local A;while true do if (FlatIdent_950AF==0) then DIP=nil;NStk=nil;Upv=nil;List=nil;Cls=nil;VA=nil;FlatIdent_950AF=1;end if (FlatIdent_950AF==3) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Top=(A + Varargsz) -1 ;for Idx=A,Top do VA=Vararg[Idx-A ];Stk[Idx]=VA;end VIP=VIP + 1 ;FlatIdent_950AF=4;end if (FlatIdent_950AF==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A]();FlatIdent_950AF=3;end if (1==FlatIdent_950AF) then A=nil;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_950AF=2;end if (FlatIdent_950AF==4) then Inst=Instr[VIP];A=Inst[2];do return Stk[A](Unpack(Stk,A + 1 ,Top));end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];FlatIdent_950AF=5;end if (FlatIdent_950AF==6) then VIP=VIP + 1 ;Inst=Instr[VIP];do return;end break;end if (FlatIdent_950AF==5) then do return Unpack(Stk,A,Top);end VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Cls={};for Idx=1, #Lupvals do local FlatIdent_19471=0;while true do if (FlatIdent_19471==0) then List=Lupvals[Idx];for Idz=0, #List do local FlatIdent_125A6=0;while true do if (FlatIdent_125A6==0) then Upv=List[Idz];NStk=Upv[1];FlatIdent_125A6=1;end if (1==FlatIdent_125A6) then DIP=Upv[2];if ((NStk==Stk) and (DIP>=A)) then local FlatIdent_69486=0;while true do if (FlatIdent_69486==0) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;break;end end end break;end end end break;end end end FlatIdent_950AF=6;end end end elseif (Enum<=127) then if (Enum<=122) then if (Enum<=120) then if (Enum>119) then local FlatIdent_185A5=0;local Edx;local Results;local Limit;local A;while true do if (FlatIdent_185A5==3) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do local FlatIdent_602BB=0;while true do if (FlatIdent_602BB==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;FlatIdent_185A5=4;end if (FlatIdent_185A5==1) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_185A5=2;end if (FlatIdent_185A5==2) then Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_185A5=3;end if (FlatIdent_185A5==4) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];FlatIdent_185A5=5;end if (FlatIdent_185A5==0) then Edx=nil;Results,Limit=nil;A=nil;Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_185A5=1;end if (FlatIdent_185A5==5) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];break;end end else do return;end end elseif (Enum==121) then if (Inst[2]~=Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local FlatIdent_6038=0;local A;while true do if (FlatIdent_6038==4) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;FlatIdent_6038=5;end if (FlatIdent_6038==7) then VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];break;end if (FlatIdent_6038==6) then VIP=VIP + 1 ;Inst=Instr[VIP];do return Stk[Inst[2]];end FlatIdent_6038=7;end if (FlatIdent_6038==2) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));FlatIdent_6038=3;end if (FlatIdent_6038==3) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]]/Inst[4] ;FlatIdent_6038=4;end if (FlatIdent_6038==0) then A=nil;Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_6038=1;end if (FlatIdent_6038==1) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;VIP=VIP + 1 ;FlatIdent_6038=2;end if (FlatIdent_6038==5) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] * Stk[Inst[4]] ;FlatIdent_6038=6;end end end elseif (Enum<=124) then if (Enum==123) then Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];else local A;Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];end elseif (Enum<=125) then Stk[Inst[2]]=Stk[Inst[3]];elseif (Enum==126) then local FlatIdent_382D5=0;while true do if (FlatIdent_382D5==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_382D5=3;end if (FlatIdent_382D5==0) then Stk[Inst[2]]=Stk[Inst[3]] * Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;FlatIdent_382D5=1;end if (FlatIdent_382D5==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] * Inst[4] ;VIP=VIP + 1 ;FlatIdent_382D5=2;end if (FlatIdent_382D5==3) then Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];do return Stk[Inst[2]];end break;end end else local FlatIdent_4A232=0;local A;while true do if (FlatIdent_4A232==3) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;FlatIdent_4A232=4;end if (FlatIdent_4A232==2) then Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];FlatIdent_4A232=3;end if (FlatIdent_4A232==1) then Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_4A232=2;end if (5==FlatIdent_4A232) then Inst=Instr[VIP];VIP=Inst[3];break;end if (0==FlatIdent_4A232) then A=nil;A=Inst[2];Stk[A]=Stk[A]();VIP=VIP + 1 ;FlatIdent_4A232=1;end if (FlatIdent_4A232==4) then Inst=Instr[VIP];A=Inst[2];do return Unpack(Stk,A,A + Inst[3] );end VIP=VIP + 1 ;FlatIdent_4A232=5;end end end elseif (Enum<=131) then if (Enum<=129) then if (Enum>128) then local A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));else local FlatIdent_81F9=0;local Edx;local Results;local Limit;local A;while true do if (5==FlatIdent_81F9) then VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];break;end if (FlatIdent_81F9==2) then Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_81F9=3;end if (FlatIdent_81F9==4) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];FlatIdent_81F9=5;end if (FlatIdent_81F9==0) then Edx=nil;Results,Limit=nil;A=nil;Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_81F9=1;end if (FlatIdent_81F9==3) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do local FlatIdent_7902A=0;while true do if (FlatIdent_7902A==0) then Edx=Edx + 1 ;Stk[Idx]=Results[Edx];break;end end end VIP=VIP + 1 ;FlatIdent_81F9=4;end if (FlatIdent_81F9==1) then Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_81F9=2;end end end elseif (Enum==130) then local FlatIdent_58F21=0;while true do if (FlatIdent_58F21==0) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];FlatIdent_58F21=1;end if (FlatIdent_58F21==2) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_58F21=3;end if (FlatIdent_58F21==3) then Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];VIP=Inst[3];break;end if (1==FlatIdent_58F21) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;FlatIdent_58F21=2;end end else Upvalues[Inst[3]]=Stk[Inst[2]];end elseif (Enum<=133) then if (Enum==132) then local FlatIdent_8A1DB=0;local Edx;local Results;local Limit;local A;while true do if (FlatIdent_8A1DB==5) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Top));VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]][Stk[Inst[3]]]=Stk[Inst[4]];FlatIdent_8A1DB=6;end if (7==FlatIdent_8A1DB) then Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;FlatIdent_8A1DB=8;end if (FlatIdent_8A1DB==4) then Top=(Limit + A) -1 ;Edx=0;for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_8A1DB=5;end if (FlatIdent_8A1DB==8) then Inst=Instr[VIP];VIP=Inst[3];break;end if (FlatIdent_8A1DB==3) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1 ,Inst[3])));FlatIdent_8A1DB=4;end if (FlatIdent_8A1DB==6) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_8A1DB=7;end if (FlatIdent_8A1DB==2) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_8A1DB=3;end if (FlatIdent_8A1DB==1) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Inst[4] ;FlatIdent_8A1DB=2;end if (FlatIdent_8A1DB==0) then Edx=nil;Results,Limit=nil;A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_8A1DB=1;end end else do return Stk[Inst[2]];end end elseif (Enum<=134) then local FlatIdent_3F2AC=0;local A;while true do if (FlatIdent_3F2AC==2) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;FlatIdent_3F2AC=3;end if (3==FlatIdent_3F2AC) then VIP=VIP + 1 ;Inst=Instr[VIP];do return Stk[Inst[2]];end FlatIdent_3F2AC=4;end if (FlatIdent_3F2AC==1) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A]();FlatIdent_3F2AC=2;end if (FlatIdent_3F2AC==4) then VIP=VIP + 1 ;Inst=Instr[VIP];do return;end break;end if (FlatIdent_3F2AC==0) then A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_3F2AC=1;end end elseif (Enum>135) then local FlatIdent_146A2=0;local A;while true do if (1==FlatIdent_146A2) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];FlatIdent_146A2=2;end if (3==FlatIdent_146A2) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];FlatIdent_146A2=4;end if (FlatIdent_146A2==2) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]= #Stk[Inst[3]];FlatIdent_146A2=3;end if (FlatIdent_146A2==4) then VIP=VIP + 1 ;Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_146A2=5;end if (FlatIdent_146A2==5) then if (Stk[Inst[2]]==Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end break;end if (FlatIdent_146A2==0) then A=nil;A=Inst[2];Stk[A]=Stk[A]();VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]];FlatIdent_146A2=1;end end else local FlatIdent_2C2F3=0;local A;while true do if (FlatIdent_2C2F3==5) then Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Upvalues[Inst[3]]=Stk[Inst[2]];FlatIdent_2C2F3=6;end if (FlatIdent_2C2F3==1) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_2C2F3=2;end if (FlatIdent_2C2F3==6) then VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Inst[3];break;end if (FlatIdent_2C2F3==0) then A=nil;Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];FlatIdent_2C2F3=1;end if (FlatIdent_2C2F3==3) then Inst=Instr[VIP];A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));VIP=VIP + 1 ;Inst=Instr[VIP];FlatIdent_2C2F3=4;end if (FlatIdent_2C2F3==2) then Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]] ;VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Stk[Inst[3]] -Inst[4] ;VIP=VIP + 1 ;FlatIdent_2C2F3=3;end if (FlatIdent_2C2F3==4) then Stk[Inst[2]]=Stk[Inst[3]];VIP=VIP + 1 ;Inst=Instr[VIP];Stk[Inst[2]]=Upvalues[Inst[3]];VIP=VIP + 1 ;FlatIdent_2C2F3=5;end end end VIP=VIP + 1 ;break;end if (0==FlatIdent_5062) then Inst=Instr[VIP];Enum=Inst[1];FlatIdent_5062=1;end end end end;end return Wrap(Deserialize(),{},vmenv)(...);end return VMCalletFEnv(),...);
